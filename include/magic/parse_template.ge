
template <template <typename...> class T, typename... Ts> 
struct type_traits<T<Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <auto...> class T, auto... Ts> 
struct type_traits<T<Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <typename, auto...> class T, typename T1, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <auto, typename...> class T, auto T1, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <typename, typename, auto...> class T, typename T1, typename T2, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <typename, auto, typename...> class T, typename T1, auto T2, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <auto, typename, auto...> class T, auto T1, typename T2, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <auto, auto, typename...> class T, auto T1, auto T2, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <typename, typename, typename, auto...> class T, typename T1, typename T2, typename T3, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_TYPE(T3)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <typename, typename, auto, typename...> class T, typename T1, typename T2, auto T3, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_NTTP(T3)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <typename, auto, typename, auto...> class T, typename T1, auto T2, typename T3, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_TYPE(T3)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <typename, auto, auto, typename...> class T, typename T1, auto T2, auto T3, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_TYPE(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_NTTP(T3)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <auto, typename, typename, auto...> class T, auto T1, typename T2, typename T3, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_TYPE(T3)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <auto, typename, auto, typename...> class T, auto T1, typename T2, auto T3, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_TYPE(T2)
    MAGIC_ADD_NTTP(T3)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};

template <template <auto, auto, typename, auto...> class T, auto T1, auto T2, typename T3, auto... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_TYPE(T3)
    MAGIC_ADD_VARADIC_NTTPS(Ts)
    MAGIC_PARSE_END
};

template <template <auto, auto, auto, typename...> class T, auto T1, auto T2, auto T3, typename... Ts> requires (sizeof...(Ts) > 0)
struct type_traits<T<T1, T2, T3, Ts...>> 
{
    MAGIC_TEMPLATE_NAME
    MAGIC_PARSE_START
    MAGIC_ADD_NTTP(T1)
    MAGIC_ADD_NTTP(T2)
    MAGIC_ADD_NTTP(T3)
    MAGIC_ADD_VARADIC_TYPES(Ts)
    MAGIC_PARSE_END
};
